{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/projects/CreateProject.jsx","store/actions/projectActions.js","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/layout/PrivateRoute.jsx","components/layout/AnonymousRoute.jsx","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","console","log","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","projects_ProjectList","dashboard_Notifications","react_router","ownProps","match","params","data","initialState","createProject","getFirestore","authorId","add","Object","objectSpread","firstName","lastName","Date","catch","err","_useState","useState","_useState2","slicedToArray","setProjectInfo","handleChange","e","defineProperty","target","value","action","onSubmit","preventDefault","history","push","htmlFor","name","onChange","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","userInfo","setUserInfo","signUp","newUser","_ref3","createUserWithEmailAndPassword","response","doc","set","Component","component","rest","objectWithoutProperties","assign","render","pathname","from","location","App","layout_Navbar","layout_PrivateRoute","exact","path","Dashboard","ProjectDetails","layout_AnonymousRoute","SignIn","SignUp","CreateProject","Boolean","window","hostname","initState","authReducer","arguments","length","undefined","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.503b9559.chunk.js","sourcesContent":["import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { signOut } from \"../../store/actions/authActions\"\nimport { connect } from \"react-redux\"\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a href=\"#\" onClick={props.signOut}>Logout</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        //console.log(firebase);\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: \"LOGIN_SUCCESS\" });\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err });\n        });\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            console.log(response);\n            return firestore.collection('users').doc(response.user.uid)\n                .set({\n                    firstName: newUser.firstName, lastName: newUser.lastName,\n                    initials: newUser.firstName[0] + newUser.lastName[0]\n                })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    }\n}\n","import React from \"react\"\nimport { NavLink } from \"react-router-dom\"\n\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Singup</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    );\n}\n\nexport default SignedOutLinks;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\n\n\nconst Navbar = (props) => {\n    const {auth,profile} = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> :  <SignedOutLinks />\n    console.log(auth);\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">JoshuaPlan</Link>\n               {links}\n            </div>\n        </nav>\n    );\n}\n\n\nconst mapStateToProps = (state) => {\n    //console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })\n\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Notifications;","import React from 'react';\nimport moment from 'moment'\n\n\nconst ProjectSummary= ({project}) => {\n    return (\n            <div className=\"card z-depth-0 prject-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    );\n}\n\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {\n                projects && projects.map(project => {\n                    return (\n                        <Link to={\"/project/\"+project.id} key={project.id}>\n                            <ProjectSummary  project={project} />\n                        </Link>\n                    )\n                })\n            }\n        </div>\n    );\n}\n\nexport default ProjectList;","import React from \"react\";\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from \"react-redux\";\nimport { compose } from 'redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom'\n\n\nconst Dashboard = (props) => {\n    //console.log(props);\n    const { projects, auth, notifications } = props;\n    if (!auth.uid)\n        return <Redirect to=\"/signin/\" />;\n    return (\n        <div className=\"dashboard container\">\n            <div className=\"row\">\n                <div className=\"col s12 m6\">\n                    <ProjectList projects={projects} />\n                </div>\n                <div className=\"col s12 m5 offset-m1\">\n                    <Notifications notifications={notifications} />\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\nexport default compose(connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\n    ]))(Dashboard);\n\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport { compose } from \"redux\"\nimport { firestoreConnect } from \"react-redux-firebase\"\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n\n    //const id = props.match.params.id;\n    const { project } = props;\n\n    if (project)\n        return (\n            <div className=\"container section project-details\">\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\"> {project.title}\n                    </span>\n                        <p>{project.content}</p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        Posted by {project.authorFirstName + \" \" + project.authorLastName}\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    else\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null;\n    return {\n        project\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([{ collection: 'projects' }])\n)(ProjectDetails)\n","import React, { useState } from 'react'\nimport { createProject } from '../../store/actions/projectActions'\nimport { connect } from \"react-redux\"\nconst initialState = {};\nfunction CreateProject(props) {\n\n    const [project, setProjectInfo] = useState(initialState);\n    function handleSubmit(e) {\n        e.preventDefault();\n        //console.log(userInfo);\n        props.createProject(project);\n        props.history.push(\"/\");\n    }\n\n    function handleChange(e) {\n        setProjectInfo({ ...project, [e.target.id]: e.target.value });\n    }\n\n    return (\n        <div className=\"container\">\n            <form action=\"\" onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" name=\"title\" id=\"title\" onChange={handleChange} />\n                </div>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea className=\"materialize-textarea\" id=\"content\" onChange={handleChange}>\n\n                    </textarea>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestore, getFirebase }) => {\n        // make asyn call\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        });\n\n    }\n}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from \"../../store/actions/authActions\"\nimport { Redirect } from \"react-router-dom\"\n\nconst initialState = {};\nfunction SignIn(props) {\n\n    const [userInfo, setUserInfo] = useState(initialState);\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(userInfo);\n        props.signIn(userInfo);\n    }\n\n    function handleChange(e) {\n        setUserInfo({ ...userInfo, [e.target.id]: e.target.value });\n    }\n    const { authError, auth } = props;\n    if (auth.uid)\n        return <Redirect to=\"/\"/>\n    return (\n\n        <div className=\"container\">\n            <form action=\"\" onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n\n\n","import React, { useState } from 'react';\nimport { signUp } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\n\nconst initialState = {};\nfunction SignUp(props) {\n    //const {signUp} = props;\n    const { authError } = props;\n    const [userInfo, setUserInfo] = useState(initialState);\n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(userInfo);\n        props.signUp(userInfo);\n    }\n\n    function handleChange(e) {\n        setUserInfo({ ...userInfo, [e.target.id]: e.target.value });\n    }\n\n    return (\n        <div className=\"container\">\n            <form action=\"\" onSubmit={handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={handleChange} />\n                </div>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={handleChange} />\n                </div>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" onChange={handleChange} />\n                </div>\n                <div className=\"input-filed\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" onChange={handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p> : null}\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React from 'react';\nimport { Route,Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nfunction PrivateRoute({ component: Component,auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                auth.uid ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/signin\",\n                                state: { from: props.location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n}\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route,Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nfunction AnonymousRoute({ component: Component,auth, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                auth.uid ? (\n                    <Redirect\n                            to={{\n                                pathname: \"/\",\n                                state: { from: props.location }\n                            }}\n                        />\n                    \n                ) : (\n                    <Component {...props} />\n                    )\n            }\n        />\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n}\nexport default connect(mapStateToProps)(AnonymousRoute);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport CreateProject from './components/projects/CreateProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport PrivateRoute from './components/layout/PrivateRoute'\nimport AnonymousRoute from './components/layout/AnonymousRoute'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Dashboard} />\n          <PrivateRoute path=\"/project/:id\" component={ProjectDetails} />\n          <AnonymousRoute path=\"/signin\" component={SignIn} />\n          <AnonymousRoute path=\"/signup\" component={SignUp} />\n          <PrivateRoute path=\"/create\" component ={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {};\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('Singout success');\n            return state;\n\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\nexport default authReducer;","const initState = {\n    projects: [\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n        { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n        { id: '3', title: 'egg hunt with joshua', content: 'blah blah blah' }\n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('Created Project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('Create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n    //return state;\n}\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from  './projectReducer';\nimport {combineReducers} from 'redux'\nimport {firestoreReducer} from 'redux-firestore'\nimport {firebaseReducer} from 'react-redux-firebase'\n\n\nconst rootReducer =combineReducers({\n    auth:authReducer,\n    project:projectReducer,\n    firestore:firestoreReducer,\n    firebase:firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA-8Im4Ob_cfkP1CoR9PJoUm3DchUb497s\",\n    authDomain: \"coolsoft-joshuaplan.firebaseapp.com\",\n    databaseURL: \"https://coolsoft-joshuaplan.firebaseio.com\",\n    projectId: \"coolsoft-joshuaplan\",\n    storageBucket: \"\",\n    messagingSenderId: \"181863204492\",\n    appId: \"1:181863204492:web:d7de7b59fb96ac35\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile:true,userProfile:'users', attachAuthIsReady: true })\n    ));\n\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>\n        , document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n});\n\n\n"],"sourceRoot":""}